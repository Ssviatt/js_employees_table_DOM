{"version":3,"sources":["scripts/main.js"],"names":["tableBlock","document","querySelector","getNumbers","num","replaceAll","replace","formatter","Intl","NumberFormat","style","currency","maximumFractionDigits","dataType","value","isNaN","pushNotification","posTop","posRight","title","description","type","body","insertAdjacentHTML","messageBlock","top","right","setTimeout","remove","cellEditing","table","tBodies","addEventListener","e","cell","target","cellValue","textContent","innerHTML","form","forms","input","elements","handlerSubmit","ev","preventDefault","includes","format","focus","addForm","newName","name","position","office","age","salary","String","length","reset","activeRow","prevTarget","parentElement","classList","add","sortTables","head","tHead","bodyItems","children","toggle","sortHandler","item","cellIndex","sortedNumbersAsc","el1","el2","innerText","sortedStringsAsc","localeCompare","addSortedList","callback","sort","className","append","reverse","alert"],"mappings":"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","file":"main.c40d2bc8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableBlock = document.querySelector('table');\n\nconst getNumbers = (num) => {\n  return num.replaceAll(',', '').replace('$', '');\n};\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  maximumFractionDigits: 0,\n});\n\nconst dataType = (value) => isNaN(+getNumbers(value)) ? 'string' : 'number';\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  document.body.insertAdjacentHTML('beforeend', `\n    <div class='notification ${type}' data-qa='notification'>\n      <h2 class='title'>${title}</h2>\n      <p>${description}</p>\n    </div>\n  `);\n\n  const messageBlock = document.querySelector(`.${type}`);\n\n  messageBlock.style.top = `${posTop}px`;\n  messageBlock.style.right = `${posRight}px`;\n\n  setTimeout(function() {\n    messageBlock.remove();\n  }, 1000);\n};\n\nfunction cellEditing(table) {\n  const body = table.tBodies[0];\n\n  body.addEventListener('dblclick', e => {\n    const cell = e.target;\n    const cellValue = e.target.textContent;\n\n    cell.innerHTML = `\n      <form name=\"cell-editing-form\">\n        <input class=\"cell-input\">\n      </form>\n    `;\n\n    const form = document.forms['cell-editing-form'];\n    const input = form.elements[0];\n    const handlerSubmit = (ev) => {\n      ev.preventDefault();\n\n      if (input.value) {\n        if (dataType(cellValue) !== dataType(input.value)) {\n          pushNotification(430, 255, 'Помилка',\n            'Невірний тип даних введення', 'error');\n          cell.textContent = cellValue;\n        } else {\n          cell.textContent = input.value;\n\n          if (cellValue.includes('$')) {\n            cell.textContent = formatter.format(input.value);\n          }\n        }\n      } else {\n        cell.textContent = cellValue;\n      };\n      form.remove();\n    };\n\n    input.focus();\n    input.addEventListener('blur', handlerSubmit);\n    form.addEventListener('submit', handlerSubmit);\n  });\n};\n\nfunction addForm(table) {\n  table.insertAdjacentHTML('afterend', `\n  <form class=\"new-employee-form\" name=\"add-table-row\">\n  <label>Name: <input\n    name=\"name\"\n    type=\"text\"\n    data-qa=\"name\"\n    required>\n  </label>\n\n  <label>Position: <input\n    name=\"position\"\n    type=\"text\"\n    data-qa=\"position\"\n    required>\n  </label>\n\n  <label>Office:\n    <select\n      name=\"office\"\n      data-qa=\"office\"\n      required>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n\n  <label>Age: <input\n    name=\"age\"\n    type=\"text\"\n    data-qa=\"age\"\n    pattern='\\\\d+'\n    required>\n  </label>\n\n  <label>Salary: <input\n    name=\"salary\"\n    type=\"text\"\n    data-qa=\"salary\"\n    pattern='\\\\d+'\n    required>\n  </label>\n\n  <button type=\"submit\">Save to table</button>\n</form>\n  `);\n\n  const form = document.forms['add-table-row'];\n  const handlerSabmit = (e) => {\n    e.preventDefault();\n\n    const newName = form.elements.name.value;\n    const position = form.elements.position.value;\n    const office = form.elements.office.value;\n    const age = form.elements.age.value;\n    const salary = form.elements.salary.value;\n\n    const minLenghtName = 4;\n    const minAge = 18;\n    const maxAge = 90;\n\n    switch (true) {\n      case String(newName).length < minLenghtName || newName[0] === ' ':\n        pushNotification(430, 255, 'Помилка',\n          'Довжина імені не може бути менше 4 літер', 'error');\n        e.target.reset();\n        break;\n\n      case age < minAge || age > maxAge:\n        pushNotification(430, 255, 'Помилка',\n          'Вік не може бути менше 18 та більше 90', 'error');\n        e.target.reset();\n        break;\n\n      default:\n        const tableBody = tableBlock.querySelector('tbody');\n\n        tableBody.insertAdjacentHTML('beforeend', `\n          <tr>\n            <td>${newName}</td>\n            <td>${position}</td>\n            <td>${office}</td>\n            <td>${age}</td>\n            <td>${formatter.format(salary)}</td>\n          </tr>\n        `);\n\n        e.target.reset();\n\n        pushNotification(430, 255, 'Успіх',\n          'Співробітник Успішно доданий', 'success');\n    };\n  };\n\n  form.addEventListener('submit', handlerSabmit);\n};\n\nfunction activeRow(table) {\n  const body = table.tBodies[0];\n  let prevTarget = null;\n\n  body.addEventListener('click', e => {\n    const target = e.target.parentElement;\n\n    if (prevTarget !== target) {\n      if (prevTarget) {\n        prevTarget.classList.remove('active');\n      }\n      target.classList.add('active');\n      prevTarget = target;\n    };\n  });\n};\n\nfunction sortTables(table) {\n  const head = table.tHead;\n  const body = table.tBodies[0];\n  const bodyItems = body.children;\n\n  let position;\n\n  function toggleClasses() {\n    let prevTarget = null;\n\n    head.addEventListener('click', e => {\n      const target = e.target;\n\n      target.classList.toggle('desc');\n\n      if (prevTarget !== target) {\n        if (prevTarget) {\n          prevTarget.classList.remove('desc');\n        }\n        target.classList.toggle('desc');\n        prevTarget = target;\n      };\n    });\n  };\n  toggleClasses(tableBlock);\n\n  function sortHandler(e) {\n    const item = e.target;\n\n    position = item.cellIndex;\n\n    const sortedNumbersAsc = (el1, el2) => {\n      return getNumbers(el1.children[position].innerText)\n        - getNumbers(el2.children[position].innerText);\n    };\n\n    const sortedStringsAsc = (el1, el2) => {\n      return el1.children[position].innerText\n        .localeCompare(el2.children[position].innerText);\n    };\n\n    function addSortedList(callback) {\n      return [...bodyItems].sort(callback);\n    }\n\n    const type = dataType(bodyItems[0].children[position].textContent);\n\n    switch (type) {\n      case 'number':\n        if (item.className === 'desc') {\n          body.append(...addSortedList(sortedNumbersAsc).reverse());\n        } else {\n          body.append(...addSortedList(sortedNumbersAsc));\n        }\n        break;\n\n      case 'string':\n        if (item.className === 'desc') {\n          body.append(...addSortedList(sortedStringsAsc).reverse());\n        } else {\n          body.append(...addSortedList(sortedStringsAsc));\n        }\n        break;\n\n      default:\n        alert('Invalid data type');\n    };\n  };\n\n  head.addEventListener('click', sortHandler);\n};\n\naddForm(tableBlock);\nactiveRow(tableBlock);\ncellEditing(tableBlock);\nsortTables(tableBlock);\n"]}